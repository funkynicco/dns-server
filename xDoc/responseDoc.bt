struct DomainLabel
{
    byte Length;
    if (Length > 0)
    {
        char Data[Length];
    }
};

struct ResursiveDomain
{
    while (true)
    {
        DomainLabel label;
        if (label.Length == 0)
            break;
    }
};

BigEndian();

ushort TransactionID;
struct
{
    unsigned char QR : 1;
	unsigned char OPCODE : 4;
	unsigned char AA : 1;
	unsigned char TC : 1;
	unsigned char RD : 1;

	unsigned char RA : 1;
	unsigned char res1 : 1;
	unsigned char res2 : 1;
	unsigned char res3 : 1;
	unsigned char RCODE : 4;
} Flags;
//ushort Flags;
ushort NumberOfQuestions;
ushort NumberOfAnswers;
ushort NumberOfAuthorities;
ushort NumberOfAdditional;

struct
{
    ResursiveDomain domains;

    ushort QuestionType;
    ushort QuestionClass;
} Questions[NumberOfQuestions];

struct
{
    //ResursiveDomain domains;
    ushort NameOffset;
    ushort Type;
    ushort Class;
    uint   TimeToLive;
    ushort DataLength;
    byte   IP[DataLength];
} Answers[NumberOfAnswers];